{"version":3,"file":"static/js/473.20ea06bd.chunk.js","mappings":"uJAIA,qBACI,IAAMA,GAAOC,EAAAA,EAAAA,GAAa,CAAEC,eAAe,IACrCC,EAAa,IAAIC,IAAAA,aAAqB,yBAO5C,OANIC,SACAA,OAAOF,WAAaA,GAExBA,EAAWG,KAAKN,GAChBG,EAAWI,gBACXC,EAAAA,EAAAA,KAAe,8BAA+BL,EAAWM,cAClD,kBAAMD,EAAAA,EAAAA,a,8ECZNE,EAAuB,SAAUC,EAAQC,GAChD,OAAOC,IAAAA,OAAAA,aAA0BF,EAAOG,QAAO,SAAUC,EAAKC,EAAOC,GACjE,OAAOF,EAAIG,OAAO,IAAIC,MAAMP,EAAQK,IAAQG,KAAKJ,MAClD,MAEIK,EAAkB,SAAUC,GACnC,OAAOT,IAAAA,OAAAA,OAAoB,IAAMS,GAE1BC,EAAa,SAAUC,EAASC,GACvC,IAAIC,EAAQF,aAAmBG,KACzBH,EAAQI,UACRD,KAAKE,MAAQ,QAEfC,GADQL,aAAmBE,KAAOF,EAAQG,UAAYD,KAAKE,OAC3CH,EAChBK,EAAclB,IAAAA,OAAAA,OAAoB,CAAEmB,IAAKF,IAEzCG,EAAKC,KAAKC,KAAKJ,EAAcD,GAASA,EAC1C,OAAO,IAAIH,KAAKD,EAAQO,IAEjBG,EAAc,SAAUC,EAAKL,GACpC,OAAOM,WAAWzB,IAAAA,OAAAA,OAAoB,CAAEwB,IAAKA,EAAKL,IAAKA,EAAKO,UAAW,MAAQC,QAAQ,KCrBvFC,EAAgD,SAAUC,EAAIC,EAAMC,GACpE,GAAIA,GAA6B,IAArBC,UAAUC,OAAc,IAAK,IAA4BC,EAAxBC,EAAI,EAAGC,EAAIN,EAAKG,OAAYE,EAAIC,EAAGD,KACxED,GAAQC,KAAKL,IACRI,IAAIA,EAAK5B,MAAM+B,UAAUC,MAAMC,KAAKT,EAAM,EAAGK,IAClDD,EAAGC,GAAKL,EAAKK,IAGrB,OAAON,EAAGxB,OAAO6B,GAAM5B,MAAM+B,UAAUC,MAAMC,KAAKT,KAIlDU,EAAoB,CACpBC,QAAS,CACL,WACA,YACA,YACA,eACA,UACA,eACA,cACA,mBACA,gBACA,gBAEJC,MAAO,CACH,eACA,eACA,sBACA,cACA,aACA,gBACA,cACA,cACA,iBACA,eAEJC,SAAU,CACN,iBACA,gBACA,cACA,YACA,aACA,cACA,eACA,aACA,eACA,aACA,gBAEJC,KAAM,CACF,YACA,eACA,sBACA,aACA,YACA,gBACA,cACA,iBACA,gBACA,gBAEJC,KAAM,CACF,gBACA,aACA,mBACA,eACA,WACA,cACA,kBACA,gBACA,aACA,eAEJC,QAAS,CACL,eACA,cACA,iBACA,aACA,cACA,cACA,YACA,aACA,mBACA,iBAEJC,KAAM,CACF,cACA,YACA,gBACA,YACA,eACA,yBACA,cACA,cACA,aACA,cAEJC,OAAQ,CACJ,oBACA,WACA,aACA,eACA,kBACA,aACA,YACA,aACA,cACA,iBAEJC,OAAQ,CACJ,iBACA,gBACA,aACA,gBACA,eACA,gBACA,mBACA,cACA,cACA,iBAEJC,OAAQ,CACJ,eACA,aACA,YACA,YACA,iBACA,aACA,eACA,eACA,UACA,eAEJC,KAAM,CACF,eACA,aACA,iBACA,aACA,aACA,eACA,cACA,gBACA,WACA,iBAEJC,OAAQ,CACJ,cACA,cACA,aACA,mBACA,eACA,cACA,WACA,iBACA,cACA,eAEJC,MAAO,CACH,eACA,YACA,aACA,eACA,WACA,aACA,eACA,eACA,mBACA,c,sBCvKJzB,EAAgD,SAAUC,EAAIC,EAAMC,GACpE,GAAIA,GAA6B,IAArBC,UAAUC,OAAc,IAAK,IAA4BC,EAAxBC,EAAI,EAAGC,EAAIN,EAAKG,OAAYE,EAAIC,EAAGD,KACxED,GAAQC,KAAKL,IACRI,IAAIA,EAAK5B,MAAM+B,UAAUC,MAAMC,KAAKT,EAAM,EAAGK,IAClDD,EAAGC,GAAKL,EAAKK,IAGrB,OAAON,EAAGxB,OAAO6B,GAAM5B,MAAM+B,UAAUC,MAAMC,KAAKT,KCAtD,eAA0BwB,QACN,IAAZA,IAAsBA,EAAU,CAAEjE,eAAe,IACrD,IAAIkE,EAAK,GAQT,OAPAA,EAAGC,UCRP,SAA0BD,EAAIE,GAC1B,IAAIpE,EAAgBoE,EAAGpE,cAGnBqE,EAAoB,EACxB,OAAOpD,MAAMwB,KAAKxB,MAAM,KAAKqD,QAAQC,KAAI,SAAUC,GAC/C,IAAIC,EAAapD,I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","sources":["fakeServer/rest.ts","../../data-generator/dist/esm/utils.js","../../data-generator/dist/esm/products.js","../../data-generator/dist/esm/reviews.js","../../data-generator/dist/esm/index.js","../../data-generator/dist/esm/customers.js","../../data-generator/dist/esm/categories.js","../../data-generator/dist/esm/commands.js","../../data-generator/dist/esm/invoices.js","../../data-generator/dist/esm/finalize.js"],"sourcesContent":["import FakeRest from 'fakerest';\nimport fetchMock from 'fetch-mock';\nimport generateData from 'data-generator-retail';\n\nexport default () => {\n    const data = generateData({ serializeDate: true });\n    const restServer = new FakeRest.FetchServer('http://localhost:4000');\n    if (window) {\n        window.restServer = restServer; // give way to update data in the console\n    }\n    restServer.init(data);\n    restServer.toggleLogging(); // logging is off by default, enable it\n    fetchMock.mock('begin:http://localhost:4000', restServer.getHandler());\n    return () => fetchMock.restore();\n};\n","import faker from 'faker/locale/en';\nexport var weightedArrayElement = function (values, weights) {\n    return faker.random.arrayElement(values.reduce(function (acc, value, index) {\n        return acc.concat(new Array(weights[index]).fill(value));\n    }, []));\n};\nexport var weightedBoolean = function (likelyhood) {\n    return faker.random.number(99) < likelyhood;\n};\nexport var randomDate = function (minDate, maxDate) {\n    var minTs = minDate instanceof Date\n        ? minDate.getTime()\n        : Date.now() - 5 * 365 * 24 * 60 * 60 * 1000; // 5 years\n    var maxTs = maxDate instanceof Date ? maxDate.getTime() : Date.now();\n    var range = maxTs - minTs;\n    var randomRange = faker.random.number({ max: range });\n    // move it more towards today to account for traffic increase\n    var ts = Math.sqrt(randomRange / range) * range;\n    return new Date(minTs + ts);\n};\nexport var randomFloat = function (min, max) {\n    return parseFloat(faker.random.number({ min: min, max: max, precision: 0.01 }).toFixed(2));\n};\n","var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport { random, lorem } from 'faker/locale/en';\nimport { randomFloat, weightedBoolean } from './utils';\nvar productReferences = {\n    animals: [\n        'Cat Nose',\n        'Dog Grass',\n        'Brown Cow',\n        'Leopard Road',\n        'Sad Dog',\n        'Pelican Pier',\n        'Green Birds',\n        'Concrete Seaguls',\n        'Hiding Seagul',\n        'Sand Caravan',\n    ],\n    beard: [\n        'Black Auburn',\n        'Basket Beard',\n        'Handlebar Moustache',\n        'White Beard',\n        'Sailor Man',\n        'Natural Beard',\n        'Yeard Phone',\n        'Braid Beard',\n        'Terminal Black',\n        'Short Boxed',\n    ],\n    business: [\n        'Corporate Prop',\n        'Office Chairs',\n        'White Clock',\n        'Work Suit',\n        'Suit & Tie',\n        'Shake Hands',\n        'Building Sky',\n        'Yellow Pad',\n        'Work Devices',\n        'Hands Clap',\n        'Work Meeting',\n    ],\n    cars: [\n        'Old Combi',\n        'Asian Plates',\n        'Pedestrian Crossing',\n        'Farmer Boy',\n        'Make Over',\n        'Sports Sunset',\n        'Desert Jeep',\n        'Highway Bridge',\n        'Race Stickers',\n        'White Deluxe',\n    ],\n    city: [\n        'Bridge Lights',\n        'Color Dots',\n        'Cloud Suspension',\n        'Paved Street',\n        'Blue Bay',\n        'Wooden Door',\n        'Concrete Angles',\n        'London Lights',\n        'Fort Point',\n        'Rainy Glass',\n    ],\n    flowers: [\n        'Apricot Tree',\n        'Orange Rose',\n        'Purple Petunia',\n        'Water Lily',\n        'White Peony',\n        'Poppy Field',\n        'Blue Flax',\n        'Love Roses',\n        'California Poppy',\n        'Dalhia Colors',\n    ],\n    food: [\n        'Fuzzy Forks',\n        'Stamp Mug',\n        'Two Expressos',\n        'Red Latte',\n        'Black Grapes',\n        'Forgotten Strawberries',\n        'Close Steam',\n        'Brewing Tea',\n        'Red Onions',\n        'Dark Honey',\n    ],\n    nature: [\n        'Distant Mountains',\n        'Fog Pond',\n        'Sand Rocks',\n        'Pebble Shore',\n        'Eroded Fractals',\n        'Water Fall',\n        'Drif Wood',\n        'Dirt Track',\n        'Green Grass',\n        'Yellow Lichen',\n    ],\n    people: [\n        'Crossing Alone',\n        'Budding Grove',\n        'Light Hair',\n        'Black & White',\n        'Rock Concert',\n        'Meeting Bench',\n        'Son & Lumière',\n        'Running Boy',\n        'Dining Hall',\n        'Tunnel People',\n    ],\n    sports: [\n        'Feather Ball',\n        'Wall Skate',\n        'Kick Flip',\n        'Down Hill',\n        'Baseball Night',\n        'Touch Line',\n        'Alone Jogger',\n        'Green Basket',\n        'Mud Hug',\n        'Metal Cycle',\n    ],\n    tech: [\n        'Black Screen',\n        'Phone Call',\n        'Tablet & Phone',\n        'No Battery',\n        'Phone Book',\n        'Camera Parts',\n        'Fuzzy Phone',\n        'Music & Light',\n        'Eye Rest',\n        'Aligned Parts',\n    ],\n    travel: [\n        'Distant Jet',\n        'Foggy Beach',\n        'White Lime',\n        'Mysterious Cloud',\n        'Mountain Top',\n        'Light House',\n        'Gray Day',\n        'Desert Walkway',\n        'Train Track',\n        'Plane Trees',\n    ],\n    water: [\n        'Fresh Stream',\n        'Reed Line',\n        'Mud Tracks',\n        'Beach Gazebo',\n        'Calm Sea',\n        'Early Bath',\n        'Aerial Coast',\n        'Canal Street',\n        'Artificial Beach',\n        'Rainy Day',\n    ],\n};\nexport default (function (db) {\n    var id = 0;\n    return db.categories.reduce(function (acc, category) { return __spreadArray(__spreadArray([], acc, true), Array.from(Array(10).keys()).map(function (index) {\n        var width = randomFloat(10, 40);\n        var height = randomFloat(10, 40);\n        return {\n            id: id++,\n            category_id: category.id,\n            reference: productReferences[category.name][index],\n            width: width,\n            height: height,\n            price: randomFloat((width * height) / 20, (width * height) / 15),\n            thumbnail: 'https://marmelab.com/posters/' +\n                category.name +\n                '-' +\n                (index + 1) +\n                '.jpeg',\n            image: 'https://marmelab.com/posters/' +\n                category.name +\n                '-' +\n                (index + 1) +\n                '.jpeg',\n            description: lorem.paragraph(),\n            stock: weightedBoolean(10)\n                ? 0\n                : random.number({ min: 0, max: 150 }),\n            sales: 0,\n        };\n    }), true); }, []);\n});\n","var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport { random, lorem } from 'faker/locale/en';\nimport { subDays, isAfter } from 'date-fns';\nimport { randomDate, weightedArrayElement, weightedBoolean } from './utils';\nexport default (function (db, _a) {\n    var serializeDate = _a.serializeDate;\n    var today = new Date();\n    var aMonthAgo = subDays(today, 30);\n    var id = 0;\n    var reviewers = db.customers\n        .filter(function (customer) { return customer.has_ordered; })\n        .filter(function () { return weightedBoolean(60); }) // only 60% of buyers write reviews\n        .map(function (customer) { return customer.id; });\n    return db.commands\n        .filter(function (command) { return reviewers.indexOf(command.customer_id) !== -1; })\n        .reduce(function (acc, command) { return __spreadArray(__spreadArray([], acc, true), command.basket\n        .filter(function () { return weightedBoolean(40); }) // reviewers review 40% of their products\n        .map(function (product) {\n        var date = randomDate(command.date);\n        var status = isAfter(aMonthAgo, date)\n            ? weightedArrayElement(['accepted', 'rejected'], [3, 1])\n            : weightedArrayElement(['pending', 'accepted', 'rejected'], [5, 3, 1]);\n        return {\n            id: id++,\n            date: serializeDate ? date.toISOString() : date,\n            status: status,\n            command_id: command.id,\n            product_id: product.product_id,\n            customer_id: command.customer_id,\n            rating: random.number({ min: 1, max: 5 }),\n            comment: Array.apply(null, Array(random.number({ min: 1, max: 5 })))\n                .map(function () { return lorem.sentences(); })\n                .join('\\n \\r'),\n        };\n    }), true); }, []);\n});\n","import generateCustomers from './customers';\nimport generateCategories from './categories';\nimport generateProducts from './products';\nimport generateCommands from './commands';\nimport generateInvoices from './invoices';\nimport generateReviews from './reviews';\nimport finalize from './finalize';\nexport default (function (options) {\n    if (options === void 0) { options = { serializeDate: true }; }\n    var db = {};\n    db.customers = generateCustomers(db, options);\n    db.categories = generateCategories();\n    db.products = generateProducts(db);\n    db.commands = generateCommands(db, options);\n    db.invoices = generateInvoices(db);\n    db.reviews = generateReviews(db, options);\n    finalize(db);\n    return db;\n});\n","import { date, name, internet, address } from 'faker/locale/en';\nimport { randomDate, weightedBoolean } from './utils';\nexport default (function (db, _a) {\n    var serializeDate = _a.serializeDate;\n    // This is the total number of people pictures available. We only use those pictures for actual customers\n    var maxCustomers = 223;\n    var numberOfCustomers = 0;\n    return Array.from(Array(900).keys()).map(function (id) {\n        var first_seen = randomDate();\n        var last_seen = randomDate(first_seen);\n        var has_ordered = weightedBoolean(25) && numberOfCustomers < maxCustomers;\n        var first_name = name.firstName();\n        var last_name = name.lastName();\n        var email = internet.email(first_name, last_name);\n        var birthday = has_ordered ? date.past(60) : null;\n        var avatar = has_ordered\n            ? 'https://marmelab.com/posters/avatar-' +\n                numberOfCustomers +\n                '.jpeg'\n            : undefined;\n        if (has_ordered) {\n            numberOfCustomers++;\n        }\n        return {\n            id: id,\n            first_name: first_name,\n            last_name: last_name,\n            email: email,\n            address: has_ordered ? address.streetAddress() : null,\n            zipcode: has_ordered ? address.zipCode() : null,\n            city: has_ordered ? address.city() : null,\n            stateAbbr: has_ordered ? address.stateAbbr() : null,\n            avatar: avatar,\n            birthday: serializeDate && birthday ? birthday.toISOString() : birthday,\n            first_seen: serializeDate ? first_seen.toISOString() : first_seen,\n            last_seen: serializeDate ? last_seen.toISOString() : last_seen,\n            has_ordered: has_ordered,\n            latest_purchase: null,\n            has_newsletter: has_ordered ? weightedBoolean(30) : true,\n            groups: [],\n            nb_commands: 0,\n            total_spent: 0,\n        };\n    });\n});\n","export default (function () { return [\n    { id: 0, name: 'animals' },\n    { id: 1, name: 'beard' },\n    { id: 2, name: 'business' },\n    { id: 3, name: 'cars' },\n    { id: 4, name: 'city' },\n    { id: 5, name: 'flowers' },\n    { id: 6, name: 'food' },\n    { id: 7, name: 'nature' },\n    { id: 8, name: 'people' },\n    { id: 9, name: 'sports' },\n    { id: 10, name: 'tech' },\n    { id: 11, name: 'travel' },\n    { id: 12, name: 'water' },\n]; });\n","import { random } from 'faker/locale/en';\nimport { isAfter, subDays } from 'date-fns';\nimport { randomDate, randomFloat, weightedArrayElement, weightedBoolean, } from './utils';\nexport default (function (db, _a) {\n    var serializeDate = _a.serializeDate;\n    var today = new Date();\n    var aMonthAgo = subDays(today, 30);\n    var realCustomers = db.customers.filter(function (customer) { return customer.has_ordered; });\n    return Array.from(Array(600).keys()).map(function (id) {\n        var nbProducts = weightedArrayElement([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], [30, 20, 5, 2, 1, 1, 1, 1, 1, 1]);\n        var basket = Array.from(Array(nbProducts).keys()).map(function () { return ({\n            product_id: random.number({ min: 0, max: 10 * 13 - 1 }),\n            quantity: weightedArrayElement([1, 2, 3, 4, 5], [10, 5, 3, 2, 1]),\n        }); });\n        var total_ex_taxes = basket.reduce(function (total, product) {\n            return total +\n                db.products[product.product_id].price * product.quantity;\n        }, 0);\n        var delivery_fees = randomFloat(3, 8);\n        var tax_rate = random.arrayElement([0.12, 0.17, 0.2]);\n        var taxes = parseFloat(((total_ex_taxes + delivery_fees) * tax_rate).toFixed(2));\n        var customer = random.arrayElement(realCustomers);\n        var date = randomDate(customer.first_seen, customer.last_seen);\n        var status = isAfter(date, aMonthAgo) && random.boolean()\n            ? 'ordered'\n            : weightedArrayElement(['delivered', 'cancelled'], [10, 1]);\n        return {\n            id: id,\n            reference: random.alphaNumeric(6).toUpperCase(),\n            date: serializeDate ? date.toISOString() : date,\n            customer_id: customer.id,\n            basket: basket,\n            total_ex_taxes: total_ex_taxes,\n            delivery_fees: delivery_fees,\n            tax_rate: tax_rate,\n            taxes: taxes,\n            total: parseFloat((total_ex_taxes + delivery_fees + taxes).toFixed(2)),\n            status: status,\n            returned: status === 'delivered' ? weightedBoolean(10) : false,\n        };\n    });\n});\n","export default (function (db) {\n    var id = 0;\n    return (db.commands\n        .filter(function (command) { return command.status !== 'delivered'; })\n        // @ts-ignore\n        .sort(function (a, b) { return new Date(a.date) - new Date(b.date); })\n        .map(function (command) { return ({\n        id: id++,\n        date: command.date,\n        command_id: command.id,\n        customer_id: command.customer_id,\n        total_ex_taxes: command.total_ex_taxes,\n        delivery_fees: command.delivery_fees,\n        tax_rate: command.tax_rate,\n        taxes: command.taxes,\n        total: command.total,\n    }); }));\n});\n","import { weightedBoolean } from './utils';\nexport default function (db) {\n    // set latest purchase date\n    db.commands.forEach(function (command) {\n        var customer = db.customers[command.customer_id];\n        if (!customer.latest_purchase ||\n            customer.latest_purchase < command.date) {\n            customer.latest_purchase = command.date;\n        }\n        customer.total_spent += command.total;\n        customer.nb_commands++;\n    });\n    // set product sales\n    db.commands.forEach(function (command) {\n        command.basket.forEach(function (item) {\n            db.products[item.product_id].sales += item.quantity;\n        });\n    });\n    // add 'collector' group\n    var customersBySpending = db.commands.reduce(function (customers, command) {\n        if (!customers[command.customer_id]) {\n            customers[command.customer_id] = { nbProducts: 0 };\n        }\n        customers[command.customer_id].nbProducts += command.basket.length;\n        return customers;\n    }, {});\n    Object.keys(customersBySpending).forEach(function (customer_id) {\n        if (customersBySpending[customer_id].nbProducts > 10) {\n            db.customers[customer_id].groups.push('collector');\n        }\n    });\n    // add 'ordered_once' group\n    db.customers\n        .filter(function (customer) { return customer.nb_commands === 1; })\n        .forEach(function (customer) { return customer.groups.push('ordered_once'); });\n    // add 'compulsive' group\n    db.customers\n        .filter(function (customer) { return customer.total_spent > 1500; })\n        .forEach(function (customer) { return customer.groups.push('compulsive'); });\n    // add 'regular' group\n    db.customers\n        .filter(function () { return weightedBoolean(20); })\n        .forEach(function (customer) { return customer.groups.push('regular'); });\n    // add 'returns' group\n    db.commands\n        .filter(function (command) { return command.returned; })\n        .forEach(function (command) {\n        if (db.customers[command.customer_id].groups.indexOf('returns') ===\n            -1) {\n            db.customers[command.customer_id].groups.push('returns');\n        }\n    });\n    // add 'reviewer' group\n    db.reviews.forEach(function (review) {\n        var customer = db.customers[review.customer_id];\n        if (customer.groups.indexOf('reviewer') === -1) {\n            customer.groups.push('reviewer');\n        }\n    });\n    // add settings\n    db.settings = [\n        {\n            id: 1,\n            configuration: {\n                url: 'http://posters-galore.com/',\n                mail: {\n                    sender: 'julio@posters-galore.com',\n                    transport: {\n                        service: 'fakemail',\n                        auth: {\n                            user: 'fake@mail.com',\n                            pass: 'f00b@r',\n                        },\n                    },\n                },\n                file_type_whiltelist: [\n                    'txt',\n                    'doc',\n                    'docx',\n                    'xls',\n                    'xlsx',\n                    'pdf',\n                    'png',\n                    'jpg',\n                ],\n            },\n        },\n    ];\n}\n"],"names":["data","generateData","serializeDate","restServer","FakeRest","window","init","toggleLogging","fetchMock","getHandler","weightedArrayElement","values","weights","faker","reduce","acc","value","index","concat","Array","fill","weightedBoolean","likelyhood","randomDate","minDate","maxDate","minTs","Date","getTime","now","range","randomRange","max","ts","Math","sqrt","randomFloat","min","parseFloat","precision","toFixed","__spreadArray","to","from","pack","arguments","length","ar","i","l","prototype","slice","call","productReferences","animals","beard","business","cars","city","flowers","food","nature","people","sports","tech","travel","water","options","db","customers","_a","numberOfCustomers","keys","map","id","first_seen","last_seen","has_ordered","first_name","name","last_name","email","internet","birthday","date","avatar","undefined","address","zipcode","stateAbbr","toISOString","latest_purchase","has_newsletter","groups","nb_commands","total_spent","generateCustomers","categories","products","category","width","height","category_id","reference","price","thumbnail","image","description","lorem","stock","random","sales","generateProducts","commands","today","aMonthAgo","subDays","realCustomers","filter","customer","nbProducts","basket","product_id","quantity","total_ex_taxes","total","product","delivery_fees","tax_rate","taxes","status","isAfter","toUpperCase","customer_id","returned","generateCommands","invoices","command","sort","a","b","command_id","generateInvoices","reviews","reviewers","indexOf","rating","comment","apply","join","generateReviews","forEach","item","customersBySpending","Object","push","review","settings","configuration","url","mail","sender","transport","service","auth","user","pass","file_type_whiltelist","finalize"],"sourceRoot":""}